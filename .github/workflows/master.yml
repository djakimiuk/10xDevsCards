name: Build and Deploy to Cloudflare

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Fix formatting issues
        run: npm run format

      - name: Fix linting issues
        run: npm run lint:fix

      - name: Run linting
        run: npm run lint
        env:
          ESLINT_MAX_WARNINGS: 50

  unit-test:
    name: Unit Tests
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test
        env:
          PUBLIC_SUPABASE_URL: ${{ secrets.PUBLIC_SUPABASE_URL }}
          PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.PUBLIC_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          PUBLIC_OPENROUTER_API_KEY: ${{ secrets.PUBLIC_OPENROUTER_API_KEY }}
          DEFAULT_USER_EMAIL: ${{ secrets.DEFAULT_USER_EMAIL }}
          DEFAULT_USER_ID: ${{ secrets.DEFAULT_USER_ID }}
          DEFAULT_USER_PASSWORD: ${{ secrets.DEFAULT_USER_PASSWORD }}
          NODE_ENV: test
          PUBLIC_SITE_URL: "http://localhost:3000"
          PUBLIC_APP_TITLE: "10xDevsCards"

  deploy:
    name: Build and Deploy
    needs: [lint, unit-test]
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Cloudflare adapter
        run: npm install @astrojs/cloudflare --save

      - name: Debug environment
        run: |
          echo "===== Environment Variables ====="
          echo "PUBLIC_SUPABASE_URL is set: $([[ -n $PUBLIC_SUPABASE_URL ]] && echo 'YES' || echo 'NO')"
          echo "PUBLIC_SUPABASE_ANON_KEY is set: $([[ -n $PUBLIC_SUPABASE_ANON_KEY ]] && echo 'YES' || echo 'NO')"
          echo "SUPABASE_SERVICE_ROLE_KEY is set: $([[ -n $SUPABASE_SERVICE_ROLE_KEY ]] && echo 'YES' || echo 'NO')"
          echo "PUBLIC_OPENROUTER_API_KEY is set: $([[ -n $PUBLIC_OPENROUTER_API_KEY ]] && echo 'YES' || echo 'NO')"

          if [ -f ".env.example" ]; then
            echo "Required environment variables (from .env.example):"
            grep -v "^#" .env.example || echo "No variables found in .env.example"
          else
            echo ".env.example file not found"
          fi
        env:
          PUBLIC_SUPABASE_URL: ${{ secrets.PUBLIC_SUPABASE_URL }}
          PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.PUBLIC_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          PUBLIC_OPENROUTER_API_KEY: ${{ secrets.PUBLIC_OPENROUTER_API_KEY }}

      - name: Debug Astro config
        run: cat astro.config.ts

      - name: Enable verbose npm logs
        run: npm config set loglevel verbose

      - name: Build project with verbose output
        run: npm run build -- --verbose
        env:
          PUBLIC_SUPABASE_URL: ${{ secrets.PUBLIC_SUPABASE_URL }}
          PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.PUBLIC_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          PUBLIC_OPENROUTER_API_KEY: ${{ secrets.PUBLIC_OPENROUTER_API_KEY }}
          DEFAULT_USER_EMAIL: ${{ secrets.DEFAULT_USER_EMAIL }}
          DEFAULT_USER_ID: ${{ secrets.DEFAULT_USER_ID }}
          DEFAULT_USER_PASSWORD: ${{ secrets.DEFAULT_USER_PASSWORD }}
          NODE_ENV: production
          PUBLIC_SITE_URL: "https://10xdevscards.pages.dev"
          PUBLIC_APP_TITLE: "10xDevsCards"

      - name: Detailed directory exploration
        run: |
          echo "Checking directory structure after build:"
          find . -maxdepth 2 -type d | sort

          echo "Exploring dist directory:"
          find ./dist -type d 2>/dev/null || echo "dist directory not found"

          echo "Contents of functions directory (if exists):"
          find ./dist/functions -type f 2>/dev/null || echo "functions directory not found"

          echo "All deployable assets:"
          find ./dist -type f | sort || echo "No files found in dist"

      - name: Deploy to Cloudflare Pages with Wrangler
        run: |
          npx wrangler pages deploy dist --project-name=10xdevscards --branch=master
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
