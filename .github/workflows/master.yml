name: Build and Deploy to Cloudflare

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Fix formatting issues
        run: npm run format

      - name: Fix linting issues
        run: npm run lint:fix

      - name: Run linting
        run: npm run lint
        env:
          ESLINT_MAX_WARNINGS: 50

  unit-test:
    name: Unit Tests
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test

  deploy:
    name: Build and Deploy
    needs: [lint, unit-test]
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Update wrangler.toml with KV Session ID
        run: |
          sed -i "s/id = \".*\"/id = \"${{ secrets.CLOUDFLARE_KV_SESSION_ID }}\"/" wrangler.toml
          cat wrangler.toml

      - name: Debug Astro config
        run: cat astro.config.mjs

      - name: Enable verbose npm logs
        run: npm config set loglevel verbose

      - name: Build project with verbose output
        run: npm run build -- --verbose
        env:
          PUBLIC_SUPABASE_URL: ${{ secrets.PUBLIC_SUPABASE_URL }}
          PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.PUBLIC_SUPABASE_ANON_KEY }}
          NODE_ENV: production

      - name: Debug build output
        run: |
          echo "Checking directory structure after build:"
          find . -maxdepth 2 -type d | sort

          echo "Contents of project root:"
          ls -la

          # Try to locate any dist-like or build directories
          echo "Looking for potential build output directories:"
          find . -type d -name "dist*" -o -name "build*" -o -name ".output*" -o -name "public*" | sort

          # Check if server.mjs was generated anywhere
          echo "Looking for server.mjs file:"
          find . -name "server.mjs" | sort

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: 10xdevscards
          directory: .
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          wranglerVersion: "3"
