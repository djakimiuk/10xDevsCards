---
import Layout from "@/layouts/Layout.astro";
import { ResetPasswordForm } from "@/components/auth/ResetPasswordForm";
import { createServerSupabaseClient, getUser as getSupabaseUser } from "@/lib/supabase";
import { logger } from "@/lib/logger";

// Disable SSR for this page as it needs to be dynamic
export const prerender = false;

// This page is typically accessed via a link from email which includes a code.
// Supabase client handles this code to establish a session for password update.
// We can check for an existing user session, but usually, if a user has a valid reset token,
// they might not have an active session cookie yet. The crucial part is Supabase client correctly
// processing the token from the URL upon navigation to this page.

try {
  const supabase = createServerSupabaseClient({ cookies: Astro.cookies });
  const { user, error: userError } = await getSupabaseUser(supabase);

  if (userError) {
    logger.warn(
      "Session check on reset-password page (might be expected if no active session before token use):",
      userError.message
    );
  }

  // If user somehow has an active session AND is trying to reset password, it's a bit odd.
  // Usually, they'd land here from an email link without an active session cookie.
  // The `resetPasswordFunction` in `lib/auth.ts` checks for an active session (which should be created by the token).
  // If they *are* logged in and try to go here directly, `resetPasswordFunction` would still work if they want to change their current password.
  // However, the primary flow is for users *without* an active session who clicked an email link.
  // Redirecting logged-in users away might be too aggressive if they intended to change their password this way,
  // although it's not the typical "forgot password" flow.
  // For now, let's keep the redirect if they are already logged in, as the typical flow is for logged-out users.
  if (user) {
    logger.info("User is already logged in, redirecting from reset-password page.");
    return Astro.redirect("/generate"); // or /profile
  }
} catch (error) {
  logger.error("Error on reset-password page (server-side setup):", error);
}
---

<Layout title="Ustaw Nowe HasÅ‚o - 10xDevsCards">
  <main class="container max-w-4xl mx-auto p-6 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    <ResetPasswordForm client:only="react" />
  </main>
</Layout>
